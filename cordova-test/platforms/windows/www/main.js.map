{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/modules/app-routing/app-routing.module.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/test/test.component.css","webpack:///./src/app/pages/test/test.component.html","webpack:///./src/app/pages/test/test.component.ts","webpack:///./src/app/pipes/safe.pipe.ts","webpack:///./src/app/services/message.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n        -ms-grid-rows: auto 1fr;\\r\\n        grid-template-rows: auto 1fr;\\r\\n    height: 100vh;\\r\\n        grid-template-areas: \\\"navbar\\\" \\\"content\\\";\\r\\n}\\r\\n\\r\\napp-navbar{\\r\\n    -ms-grid-row: 1;\\r\\n    -ms-grid-column: 1;\\r\\n    grid-area: navbar;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    -ms-grid-row: 2;\\r\\n    -ms-grid-column: 1;\\r\\n    grid-area: content;\\r\\n    overflow-y: auto;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-navbar class=\\\"mat-elevation-z6\\\"></app-navbar>\\n  <div class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { MessageService, MessageTypes } from './services/message.service';\nimport { MatBottomSheet } from '@angular/material';\nimport { MessageComponent } from 'cordova-test/platforms/windows/src/app/message/message.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // title = window['cordova'].platformId;\n  title = 'Angular';\n\n  constructor(public msgService: MessageService) {\n    msgService.pushMessage({type: MessageTypes.Error, message: 'Test 1' });\n    msgService.pushMessage({type: MessageTypes.Warn, message: 'Test 2' });\n    msgService.pushMessage({type: MessageTypes.Info, message: 'Test 321' });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MessageComponent } from './message/message.component';\nimport { MessageService } from './services/message.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatBottomSheetModule, MatBadgeModule, MatIconModule} from '@angular/material';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AppRoutingModule } from './modules/app-routing/app-routing.module';\nimport { HomeComponent } from './pages/home/home.component';\nimport { TestComponent } from './pages/test/test.component';\nimport { SafePipe } from './pipes/safe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageComponent,\n    NavbarComponent,\n    HomeComponent,\n    TestComponent,\n    SafePipe\n  ],\n  entryComponents: [MessageComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatBottomSheetModule,\n    AppRoutingModule\n  ],\n  providers: [MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\r\\n.Error{\\r\\n    background-color: red;\\r\\n    color: white;\\r\\n    text-shadow: 1px 1px 1px black;\\r\\n}\\r\\n\\r\\n.Warn{\\r\\n    background-color: yellow;\\r\\n    color: blue;\\r\\n    text-shadow: 1px 1px 1px green;\\r\\n}\\r\\n\\r\\n.Info{\\r\\n    background-color: lightblue;\\r\\n    color: green;\\r\\n    text-shadow: 1px 1px 1px black;\\r\\n}\"","module.exports = \"<div class=\\\"main\\\">\\n    <ol>\\n        <li *ngFor=\\\"let msg of messages\\\">\\n          <span [textContent]=\\\"msg.message\\\" [class.Info]=\\\"msg.type==msgType.Info\\\" [class.Warn]=\\\"msg.type==msgType.Warn\\\" [class.Error]=\\\"msg.type==msgType.Error\\\"></span>\\n        </li>\\n    </ol>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService, OneMessage, MessageTypes } from '../services/message.service';\nimport { MatBottomSheetRef } from '@angular/material';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n\n  messages: OneMessage[];\n  msgType = MessageTypes;\n  constructor(private bottomSheetRef: MatBottomSheetRef<MessageComponent>,\n    private msgService: MessageService) { }\n\n  showMsgs(num: number = 20) {\n    this.messages = this.msgService.readMessages();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../../pages/home/home.component';\nimport { TestComponent } from '../../pages/test/test.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'test', component: TestComponent}\n];\n\n@NgModule({\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    RouterModule.forRoot(routes, {useHash: true})\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"nav{\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    align-items: center;\\r\\n    padding: 8px 16px;\\r\\n    background: #673ab7;\\r\\n}\\r\\n\\r\\n.flex-spacer{\\r\\n    flex-grow: 1;\\r\\n}\"","module.exports = \"<nav class=\\\"docs-navbar-header\\\">\\n  <span>abc</span>\\n  <div class=\\\"flex-spacer\\\"></div>\\n  <button mat-icon-button [matBadge]=\\\"nUnReadMsg\\\" (click)=\\\"showMsgsAtBottom()\\\" *ngIf=\\\"nUnReadMsg!=0\\\">\\n    <mat-icon class=\\\"mat-18\\\">event_note</mat-icon>\\n  </button>\\n</nav>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { MessageService } from '../services/message.service';\nimport { MatBottomSheet } from '@angular/material';\nimport { MessageComponent } from '../message/message.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  nUnReadMsg = 0;\n  constructor(private bottomSheet: MatBottomSheet , public msgService: MessageService) {\n    this.nUnReadMsg = msgService.getNUnRead();\n    msgService.remindMsgIn.subscribe(\n      (n) => {\n          this.nUnReadMsg = n;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  showMsgsAtBottom() {\n    const ref = this.bottomSheet.open(MessageComponent);\n    ref.instance.showMsgs();\n  }\n}\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/test\\\">Test</a>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<input #selFile type=\\\"file\\\" multiple (change)=\\\"onSelFileChange(selFile.files)\\\">\\r\\n<video #audioFromFile autoplay controls [src]=\\\"audioSrc|safe\\\">\\r\\n</video>\\r\\n<hr>\\r\\n<div>\\r\\n    <div>Is cordova support? {{(isCordovaSupport)?\\\"Yes\\\":\\\"No\\\"}}</div>\\r\\n    <div>Is cordova.file support? {{(isFilePluginSupport)?\\\"Yes\\\":\\\"No\\\"}}</div>\\r\\n</div>\\r\\n<div>\\r\\n    <button mat-raised-button (click)=\\\"onGetDocFolder()\\\">\\r\\n        <mat-icon>folder</mat-icon>\\r\\n    </button>\\r\\n    {{newFolderName}}\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService, MessageTypes, OneMessage } from '../../services/message.service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  audioFile: File;\n  // audioSrc: SafeUrl;\n  audioSrc: string;\n  isCordovaSupport: boolean;\n  isFilePluginSupport: boolean;\n  newFolderName: string;\n\n  constructor(private msgService: MessageService, private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.isCordovaSupport = !!window.cordova;\n    this.isFilePluginSupport = this.isCordovaSupport && !!cordova.file;\n  }\n\n  async onSelFileChange(files: FileList) {\n    this.audioFile = files[0];\n    const fName = this.audioFile.name;\n    if (!!window.cordova && cordova.platformId === 'windows') {\n      try {\n        const outputFile = await Windows.Storage.KnownFolders.videosLibrary.createFileAsync(this.audioFile.name);\n        const outStream = await outputFile.openAsync(Windows.Storage.FileAccessMode.readWrite);\n        const inStream = this.audioFile.msDetachStream();\n        await Windows.Storage.Streams.RandomAccessStream.copyAsync(inStream, outStream);\n        await outStream.flushAsync();\n        inStream.close();\n        outStream.close();\n      } catch (error) {\n        this.msgService.pushMessage({type: MessageTypes.Error, message: error});\n      }\n    }\n    // this.audioSrc = this.sanitizer.bypassSecurityTrustUrl('https://www.scripturesongs.net/mp3/h1/01FountainFilledWithBlood.mp3');\n    // this.audioSrc = 'https://www.scripturesongs.net/mp3/h1/01FountainFilledWithBlood.mp3';\n    // this.audioSrc = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(this.audioFile));\n    const newFile = await Windows.Storage.KnownFolders.videosLibrary.getFileAsync(fName);\n    this.audioSrc = window.URL.createObjectURL(newFile);\n    this.msgService.pushMessage({type : MessageTypes.Info, message: `audioSrc: ${JSON.stringify(this.audioSrc)}`});\n  }\n\n  async onGetDocFolder() {\n    if (!!window['Windows']) {\n      const docFolder = Windows.Storage.KnownFolders.videosLibrary;\n      const newFolder = await docFolder.createFolderAsync('Test');\n      if (newFolder != null) {\n        this.newFolderName = newFolder.path;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe',\n  pure: true\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  transform(url: string, args?: any): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  remindMsgIn: Subject<number> = new Subject();\n\n  private _messages: OneMessage[] = [];\n  private _nRead = 0;\n\n  pushMessage(msg: OneMessage) {\n    this._messages.push(msg);\n    this.remindMsgIn.next(this.getNUnRead());\n  }\n\n  readMessages() {\n    this._nRead = this._messages.length;\n    this.remindMsgIn.next(0);\n    return this._messages.reverse();\n  }\n\n  getNUnRead() {\n    return this._messages.length - this._nRead;\n  }\n\n  constructor() { }\n\n\n}\n\nexport class OneMessage {\n  type: MessageTypes;\n  message: string;\n  constructor() {\n  }\n}\n\nexport enum MessageTypes {\n  Info,\n  Warn,\n  Error\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}